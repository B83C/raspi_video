#cloud-config
# vim: syntax=yaml
#
# BerryOS Default Cloud Config
#

# ## Set system hostname
hostname: set_your_hostname_here                    # System hostname
manage_etc_hosts: true              # If true, will also update the /etc/hosts file entries
# # Reference(s):
# # - https://cloudinit.readthedocs.io/en/latest/topics/modules.html#set-hostname
# # - https://cloudinit.readthedocs.io/en/latest/topics/modules.html#update-etc-hosts

# ## Configure default user access
password: set_your_password_here # Set default user password
chpasswd: { expire: false }         # Do not expire password after first login
ssh_pwauth: true                    # Enable SSH password authentication for default user
# ssh_authorized_keys:                # Set SSH authorized keys for default user
#   - ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAGEA3FSyQwBI6Z+nCSjUU ...
#   - ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA3I7VUf2l5gSn5uavROsc5HRDpZ ...
# ssh_import_id:                      # Import SSH authorized keys from a remote source for default user
#   - gh:0rax
# # Reference(s):
# # - https://cloudinit.readthedocs.io/en/latest/topics/modules.html#set-passwords
# # - https://cloudinit.readthedocs.io/en/latest/topics/modules.html#authorized-keys
# # - https://cloudinit.readthedocs.io/en/latest/topics/modules.html#ssh-import-id

# ## Create your own user (overrides default user configuration)
users:
  - default
  - name: ftp
    lock_passwd: false
    shell: /usr/sbin/nologin                # Set user default shell
    chpasswd: { expire: false }     # Do not expire password after first login
    plain_text_passwd: set_your_password_here

#   - name: myuser                    # Create new custom user
#     gecos: "My Custom User"         # Set user description
#     sudo: ALL=(ALL) NOPASSWD:ALL    # Enable passwordless sudo
#     shell: /bin/bash                # Set user default shell
#     groups:                         # Set user groups
#       [adm, dialout, cdrom, sudo, audio, video, plugdev, games, users, input, render, netdev]
#     passwd: berryos                 # Set user password
#     chpasswd: { expire: false }     # Do not expire password after first login
#     ssh_pwauth: true                # Allow SSH password auth for the user
#     ssh_authorized_keys:            # Set SSH authorized keys for the user
#       - ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAGEA3FSyQwBI6Z+nCSjUU ...
#       - ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA3I7VUf2l5gSn5uavROsc5HRDpZ ...
#     ssh_import_id:                  # Import SSH authorized keys from a remote source for the user
#       - gh:0rax
# # Reference(s):
# # - https://cloudinit.readthedocs.io/en/latest/topics/modules.html#users-and-groups

# ## Set the system timezone
timezone: "Asia/Kuala_Lumpur"           # Timezone value must exist in /usr/share/zoneinfo
# # Reference(s):
# # - https://cloudinit.readthedocs.io/en/latest/topics/modules.html#timezone

# ## Configure NTP pools
ntp:
  enabled: true                     # Enable NTP module
  pools:                            # Specift custom pool uri
    - 0.my.pool.ntp.org
    - 1.my.pool.ntp.org
    - 2.my.pool.ntp.org
    - 3.my.pool.ntp.org
# # Reference(s):
# # - https://cloudinit.readthedocs.io/en/latest/topics/modules.html#ntp
#apt:
#  preserve_sources_list: true

#  sources: 
#    github_cli:
#      keyid: 23F3D4EA75716059
#      source: deb [arch=arm64 signed-by=$KEY_FILE] https://cli.github.com/packages stable main
  
# # Update package list, upgrade system or install new packages on first boot
package_update: true                # Update package list
package_upgrade: true               # Update system package on first-noot
package_reboot_if_required: true    # Reboot system after installing or upgrading if needed
packages:                           # Install additional packages
  - vlc
  - screen
  - proftpd
  - raspi-gpio
  - cec-utils
  - fonts-arphic-ukai
  
# # Reference(s):
# # - https://cloudinit.readthedocs.io/en/latest/topics/modules.html#package-update-upgrade-install

# ## Write custom files to disk
write_files:
  - path: /opt/raspivideo/videoloop.sh # File path
    permissions: "0777"             # File permission
    owner: "root:root"              # File ownership
    content: |                      # File content
      #!/bin/bash
      PASSWORD=set_your_password_here
      HTTP_PORT=3210
      LOOP_PATH=/home/ftp
      VLC_ARG="-I ncurses --extraintf http --loop $LOOP_PATH --http-password $PASSWORD --http-port $HTTP_PORT"
      
      startvlc() {
        stopvlc
        
        vlc $VLC_ARG
      }
      
      screen_start_vlc() {
        
        current=$(date '+%H%M')
        dow=$(date '+%u')
        WEEKDAYS_START_TIME=0630
        WEEKDAYS_END_TIME=1500
        WEEKEND_START_TIME=0600
        WEEKEND_END_TIME=1300

        if [[ $dow == [1-5] && $current > $WEEKDAYS_START_TIME && $current < WEEKDAYS_END_TIME ]] || [[ $dow == 6 && $current > $WEEKEND_START_TIME && $current < $WEEKEND_END_TIME ]]; then
          stopvlc
          screen -dmS videoloop vlc $VLC_ARG
        fi 
      }
      
      stopvlc() {
        screen -XS videoloop quit
        pkill screen
        pkill vlc
      }
      
      if [[ "$1" == "stop" ]]; then
        stopvlc
      elif [[ "$1" == "rawstart" ]]; then
        startvlc
      else
        screen_start_vlc
      fi
  
  - path: /opt/raspivideo/tv.sh
    permissions: "0777"             
    owner: "root:root"              
    content: |          
      #!/bin/bash
      
      if [ "$(id -u)" -ne 0 ]; then echo "Please run as root." >&2; exit 1; fi
      
      RELAY_GPIO=17
      
      if [[ "$1" == "on" ]]; then
        raspi-gpio set $RELAY_GPIO op dl
        echo "on 0" | /usr/bin/cec-client -s -d 1
      elif [[ "$1" == "off" ]]; then
        raspi-gpio set $RELAY_GPIO op dh
        echo "off 0" | /usr/bin/cec-client -s -d 1
      elif [[ "$1" == "off" ]]; then
        raspi-gpio set $RELAY_GPIO op dh
        echo "off 0" | /usr/bin/cec-client -s -d 1
      else
        echo "Please specify on or off"
      fi
      
  - path: /etc/OliveTin/config.yaml
    content: |
      listenAddressSingleHTTPFrontend: 0.0.0.0:1337 
      logLevel: "INFO"

      actions:   
      - title: Reboot System
        shell: reboot
        icon: backup 

      - title: Ping host
        shell: ping {{ host }} -c {{ count }}
        icon: ping
        arguments:
          - name: host
            title: host
            type: ascii_identifier
            default: example.com
            description: The host that you want to ping

          - name: count
            title: Count
            type: int
            default: 4
            description: How many times to do you want to ping?

      - title: Turn on TV
        shell: /opt/raspivideo/tv.sh on
        timeout: 10
        icon: "&#x23FD"

      - title: Turn off TV
        timeout: 10
        shell: /opt/raspivideo/tv.sh off
        icon: "&#x23FE"

      - title: APT Upgrade 
        shell: apt update --yes && apt upgrade --yes
        timeout: 360
        icon: "&#x1F503"

      - title: Full System Upgrade
        shell: apt update --yes && apt full-upgrade --yes
        timeout: 600
        icon: "&#x2965"

      - title: Restart VLC
        shell: sudo -u pi /opt/raspivideo/videoloop.sh 
        icon: "&#x21BA"

      - title: Reboot System
        shell: reboot
        icon: restart

  - path: /etc/cron.d/videoloop
    content: |                      # File content
      31 06 * * 1-5 pi /opt/raspivideo/videoloop.sh 
      31 06 * * 1-5 root /opt/raspivideo/tv.sh on
      59 14 * * 1-5 pi /opt/raspivideo/videoloop.sh stop
      59 14 * * 1-5 root /opt/raspivideo/tv.sh off
      
      01 06 * * 6 pi /opt/raspivideo/videoloop.sh
      01 06 * * 6 root /opt/raspivideo/tv.sh on
      59 12 * * 6 pi /opt/raspivideo/videoloop.sh stop
      59 12 * * 6 root /opt/raspivideo/tv.sh off

      @reboot pi /opt/raspivideo/videoloop.sh
      @reboot root /opt/raspivideo/tv.sh on

# # Reference(s):
# # - https://cloudinit.readthedocs.io/en/latest/topics/modules.html#write-files

# ## Run commands on first boot (runs after all module)
runcmd:
#Fetch latest olivetin from github since it is not added to main repo
  - wget -O /tmp/olivetin_latest.deb https://github.com/OliveTin/OliveTin/releases/latest/download/OliveTin_linux_arm64.deb && dpkg -i /tmp/olivetin_latest.deb
  - systemctl enable --now cron proftpd OliveTin
  - sed -i '/RequireValidShell/c\RequireValidShell off' /etc/proftpd/proftpd.conf
  - ip a
#   - echo BerryOS
# # Reference(s):
# # - https://cloudinit.readthedocs.io/en/latest/topics/modules.html#runcmd

# ## Reboot system after provisioning
power_state:
  mode: reboot
# # Reference(s):
# # - https://cloudinit.readthedocs.io/en/latest/topics/modules.html#power-state-change
